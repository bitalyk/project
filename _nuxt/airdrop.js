import{a1 as u,K as t,Z as g,aA as o,q as r,A as i,a2 as c,p as h,aG as l,s as d}from"./entry.PKrA3y6R.js";const p=u("airdrop",{state:()=>({tasks:[],balanceTickets:0,tonConnectUI:null,tonConnect:null,tonAddress:""}),actions:{getPointImage(e){switch(e){case"airdrop_points":return o.TOKEN;case t.passive_income:return g;case t.earn_tasks:return"/images/airdrop/earn_tasks.png";case t.friends:return"/images/airdrop/friends.png";case t.achievements:return"/images/airdrop/achievements.png";case t.telegram_subscription:return"/images/airdrop/telegram_channel.png";case t.keys:return"/images/minigame/key.png";default:return""}},getPointImageCompressed(e){switch(e){case"airdrop_points":return o.TOKEN_WEBP;case t.earn_tasks:return"/images/airdrop/earn_tasks.webp";case t.friends:return"/images/airdrop/friends.webp";case t.achievements:return"/images/airdrop/achievements.webp";case t.telegram_subscription:return"/images/airdrop/telegram_channel.webp";case t.keys:return"/images/minigame/key.webp";default:return""}},getTaskName(e){switch(e){case i.INVITE_FRIENDS:return r().$i18n.t("airdrop.invite_friends",{n:5});case i.REACH_PROFIT_PER_HOUR:return r().$i18n.t("airdrop.reach_profit_per_hour",{value:"10k"});case i.REACH_LEVEL:return r().$i18n.t("airdrop.reach_level",{level:4});case i.SUBSCRIBE_TELEGRAM_CHANNEL:case i.CONNECT_TON_WALLET:return r().$i18n.t(`airdrop.${e}`,{network:"TON"});default:return r().$i18n.t("airdrop.task")}},async postListTasks(){return await c.post("/clicker/list-airdrop-tasks",{}).then(e=>(e!=null&&e.airdropTasks&&this.setTasks(e.airdropTasks),e!=null&&e.balanceTickets&&this.setBalanceTickets(e.balanceTickets),e)).catch(e=>{h.error({title:r().$i18n.t("messages.request_error"),message:r().$i18n.t("messages.no_airdrop_tasks")})})},async postCheckTask(e){return await c.post("/clicker/check-airdrop-task",{body:{...e}}).then(a=>(a!=null&&a.balanceTickets&&this.setBalanceTickets(a.balanceTickets),a))},async postDeleteWallet(){return await c.post("/clicker/delete-wallet",{}).then(e=>(e!=null&&e.balanceTickets&&this.setBalanceTickets(e.balanceTickets),e))},setTasks(e=[]){if(e.length){const a=localStorage.getItem(l.AIRDROP_TASKS);a?this.hashcode(e)!==Number(a)&&(d().taskAirdropNotification=!0):d().taskAirdropNotification=!0,this.tasks=e,localStorage.setItem(l.AIRDROP_TASKS,JSON.stringify(this.hashcode(e)))}},setBalanceTickets(e){this.balanceTickets=e},hashcode(e){let a=0;const n=JSON.stringify(e).replace(/\{|\"|\}|\:|,/g,""),k=n.length;for(let s=0;s<k;s++)a+=n.charCodeAt(s)*7;return a}}});export{p as u};
